# This workflow runs and tests all Marimo notebooks in the project
# It creates a matrix of jobs, one for each notebook, and runs them in parallel
name: "Marimo"
permissions:
  contents: read

on:
  push

jobs:
  # Parse .env file and build a matrix of notebooks to test
  list-notebooks:
    if: github.repository != 'tschm/.config-templates'
    runs-on: ubuntu-latest
    outputs:
      notebook-list: ${{ steps.notebooks.outputs.matrix }}
    steps:
      # Check out the repository code
      - uses: actions/checkout@v4

      # Find all Python files in the marimo folder and create a matrix for parallel execution
      - name: Find notebooks and build matrix
        id: notebooks
        run: |
          NOTEBOOK_DIR="book/marimo"
          echo "Searching notebooks in: $NOTEBOOK_DIR"
          notebooks=$(find "$NOTEBOOK_DIR" -name "*.py" -print0 | xargs -0 -n1 echo | jq -R -s -c 'split("\n")[:-1]')
          echo "matrix=$notebooks" >> "$GITHUB_OUTPUT"
        shell: bash

  # Create one job per notebook using the matrix strategy for parallel execution
  test-notebooks:
    if: github.repository != 'tschm/.config-templates'
    runs-on: ubuntu-latest
    needs: list-notebooks
    strategy:
      matrix:
        notebook: ${{ fromJson(needs.list-notebooks.outputs.notebook-list) }}
    name: Run notebook ${{ matrix.notebook }}
    steps:
      # Check out the repository code
      - uses: actions/checkout@v4

      # Install Python dependencies
      - name: Install uv, uvx and the environment
        run: |
          make install
        shell: bash

      # Execute the notebook with the appropriate runner based on its content
      - name: Run notebook
        run: |
          uv run "${{ matrix.notebook }}"
        shell: bash
